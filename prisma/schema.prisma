// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Device {
  id           Int             @id @default(autoincrement())
  deviceId     String          @unique @map("device_id") @db.VarChar(50)
  name         String?         @db.VarChar(100)
  location     String?         @db.VarChar(255)
  description  String?         @db.Text
  lastSeen     DateTime?       @map("last_seen") @db.DateTime(0)
  isActive     Boolean         @default(true) @map("is_active")
  createdAt    DateTime        @default(now()) @map("created_at") @db.DateTime(0)
  updatedAt    DateTime        @updatedAt @map("updated_at") @db.DateTime(0)

  // Relasi
  SensorReading SensorReading[]
  Relay         Relay[]

  @@map("devices")
}

model SensorReading {
  id          BigInt   @id @default(autoincrement())
  deviceId    String   @map("device_id") @db.VarChar(50)
  temperature Decimal  @db.Decimal(4, 1)
  humidity    Decimal  @db.Decimal(4, 1)
  recordedAt  DateTime @default(now()) @map("recorded_at") @db.DateTime(0)

  // Relasi
  device      Device   @relation(fields: [deviceId], references: [deviceId], onDelete: Cascade, onUpdate: Cascade)

  @@index([deviceId], name: "idx_readings_device_id")
  @@index([recordedAt], name: "idx_readings_recorded_at")
  @@map("sensor_readings")
}

model Relay {
  id            Int      @id @default(autoincrement())
  deviceId      String   @map("device_id") @db.VarChar(50)
  relayChannel  Int      @map("relay_channel")
  name          String?  @db.VarChar(100)
  description   String?  @db.Text
  desiredState  Boolean  @default(false) @map("desired_state")
  currentState  Boolean  @default(false) @map("current_state")
  lastUpdated   DateTime @default(now()) @updatedAt @map("last_updated") @db.DateTime(0)
  createdAt     DateTime @default(now()) @map("created_at") @db.DateTime(0)

  // Relasi
  device        Device          @relation(fields: [deviceId], references: [deviceId], onDelete: Cascade, onUpdate: Cascade)
  RelaySchedule RelaySchedule[]

  @@unique([deviceId, relayChannel], name: "uk_device_relay_channel")
  @@map("relays")
}

model RelaySchedule {
  id               Int      @id @default(autoincrement())
  relayId          Int      @map("relay_id")
  scheduleName     String?  @map("schedule_name") @db.VarChar(100)
  startTime        DateTime @map("start_time") @db.Time // <-- UBAH DARI String KE DateTime
  durationMinutes  Int      @map("duration_minutes")
  daysOfWeek       String?  @default("1111111") @map("days_of_week") @db.VarChar(7)
  isActive         Boolean  @default(true) @map("is_active")
  createdAt        DateTime @default(now()) @map("created_at") @db.DateTime(0)
  updatedAt        DateTime @updatedAt @map("updated_at") @db.DateTime(0)

  // Relasi
  relay            Relay    @relation(fields: [relayId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@unique([relayId, startTime, daysOfWeek], name: "uk_relay_schedule_time")
  @@index([relayId], name: "idx_schedules_relay_id")
  @@map("relay_schedules")
}